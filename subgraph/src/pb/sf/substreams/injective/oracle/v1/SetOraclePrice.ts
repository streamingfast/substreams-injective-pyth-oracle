// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.3

import { Writer, Reader } from "as-proto/assembly";
import { PriceState } from "./PriceState";

export class SetOraclePrice {
  static encode(message: SetOraclePrice, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.priceId);

    writer.uint32(17);
    writer.double(message.emaPrice);

    writer.uint32(25);
    writer.double(message.emaConf);

    writer.uint32(33);
    writer.double(message.conf);

    writer.uint32(40);
    writer.int64(message.publishTime);

    const priceState = message.priceState;
    if (priceState !== null) {
      writer.uint32(50);
      writer.fork();
      PriceState.encode(priceState, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): SetOraclePrice {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new SetOraclePrice();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.priceId = reader.string();
          break;

        case 2:
          message.emaPrice = reader.double();
          break;

        case 3:
          message.emaConf = reader.double();
          break;

        case 4:
          message.conf = reader.double();
          break;

        case 5:
          message.publishTime = reader.int64();
          break;

        case 6:
          message.priceState = PriceState.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  priceId: string;
  emaPrice: f64;
  emaConf: f64;
  conf: f64;
  publishTime: i64;
  priceState: PriceState | null;

  constructor(
    priceId: string = "",
    emaPrice: f64 = 0.0,
    emaConf: f64 = 0.0,
    conf: f64 = 0.0,
    publishTime: i64 = 0,
    priceState: PriceState | null = null
  ) {
    this.priceId = priceId;
    this.emaPrice = emaPrice;
    this.emaConf = emaConf;
    this.conf = conf;
    this.publishTime = publishTime;
    this.priceState = priceState;
  }
}
