services:
  main:
    image: ghcr.io/streamingfast/substreams-starter:v0.1.2
    platform: linux/amd64
    volumes:
      - ..:/workspace:cached
      - /var/run/docker.sock:/var/run/docker-host.sock
    entrypoint: '/bin/sh -c "sleep infinity"'
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "true"]
      interval: 10s
      timeout: 5s
      retries: 5

  ipfs:
    image: ipfs/kubo:v0.14.0
    volumes:
      -  ../.devcontainer/devdata/ipfs:/data/ipfs
      - ../.devcontainer/devdata/ipfs-export:/export
    ports:
      - "5001:5001"
      - "8080:8080"
    depends_on:
      - postgres

  graph-node:
    image: graphprotocol/graph-node:9a51f3b
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    volumes:
      - ../.graph-node:/config/graph-node:cached
      - ..:/workspace:cached  # .devcontainer, .env
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      GRAPH_LOG: info
      GRAPH_NODE_CONFIG: /workspace/.graph-node/config.toml
      GRAPH_STORE_WRITE_BATCH_SIZE: 0
    command:
      - /workspace/.devcontainer/wait-graph-node.sh
    depends_on:
      - ipfs
      - postgres
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8000"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    command:
    -  "postgres"
    -  "-cshared_preload_libraries=pg_stat_statements"
    #-  "-clog_statement=all"
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - ../.devcontainer/devdata/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 15

  pgweb:
    image: sosedoff/pgweb:0.11.12
    restart: on-failure
    ports:
      - "8081:8081"
    command: ["pgweb", "--bind=0.0.0.0", "--listen=8081", "--binary-codec=hex"]
    environment:
      - DATABASE_URL=postgres://graph-node:let-me-in@postgres:5432/graph-node?sslmode=disable
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "true"]
      interval: 10s
      timeout: 5s
      retries: 5
